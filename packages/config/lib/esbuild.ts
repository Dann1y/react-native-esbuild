import path from 'node:path';
import deepmerge from 'deepmerge';
import type { BuildOptions } from 'esbuild';
import type { EsbuildPresetOptions } from './types';
import { ASSET_EXTENSIONS, BANNER_VARS, SOURCE_EXTENSIONS } from './shares';

export function getEsbuildOptions(
  options: EsbuildPresetOptions,
  customEsbuildOptions?: Partial<BuildOptions>,
): BuildOptions {
  const { entryPoint, outfile, assetsDir, platform, dev, minify } = options;

  const platforms = [platform, 'native', 'react-native'];
  const extensions = SOURCE_EXTENSIONS.concat(ASSET_EXTENSIONS);

  const getReactNativePolyfills = (): string[] => {
    // eslint-disable-next-line @typescript-eslint/no-var-requires
    const getPolyfills = require(require.resolve(
      'react-native/rn-get-polyfills',
      {
        paths: Array.from(
          new Set([
            // add current workspace directory to module resolution path.
            // improve for workspace projects (eg. monorepo)
            path.join(process.cwd(), 'node_modules'),
            ...(require.main?.paths ?? []),
          ]),
        ).filter(Boolean),
      },
    )) as () => string[];

    return getPolyfills();
  };

  const baseOptions: BuildOptions = {
    /**
     * mainFields
     * @see {@link https://github.com/facebook/metro/blob/0.72.x/docs/Configuration.md#resolvermainfields}
     */
    mainFields: ['react-native', 'browser', 'main', 'module'],
    entryPoints: [entryPoint],
    outfile,
    assetNames: `${assetsDir}/[name]-[hash]`,
    sourceRoot: process.cwd(),
    resolveExtensions: platforms
      .map((platform) => extensions.map((ext) => `.${platform}${ext}`))
      .concat(extensions)
      .flat(),
    define: {
      __DEV__: JSON.stringify(dev),
      global: 'window',
      'process.env.NODE_ENV': JSON.stringify(
        dev ? 'development' : 'production',
      ),
    },
    loader: Object.fromEntries(ASSET_EXTENSIONS.map((ext) => [ext, 'file'])),
    legalComments: 'none',
    banner: {
      js: `var ${BANNER_VARS.join(',')};`,
    },
    inject: [
      'react-native/Libraries/Core/InitializeCore',
      ...getReactNativePolyfills(),
    ],
    target: 'es6',
    supported: {
      /**
       * to avoid block scope bug on hermes engine.
       * in `__copyProps`, generated by esbuild
       *
       * @see {@link https://github.com/evanw/esbuild/blob/v0.18.17/internal/runtime/runtime.go#L192}
       */
      'for-of': false,
    },
    format: 'iife',
    bundle: true,
    sourcemap: true,
    minify,
    logLevel: 'silent',
  };

  return deepmerge(baseOptions, customEsbuildOptions ?? {});
}
